name: Docker Build and Push

on:
  push:
    branches: [ master ]
    paths-ignore:
      - 'docs/**'
      - '*.md'
  pull_request:
    branches: [ master ]
    paths-ignore:
      - 'docs/**'
      - '*.md'
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to GitHub Container Registry
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v2
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=sha,prefix=sha-
          type=raw,value=latest,enable={{is_default_branch}}
          type=raw,value={{branch}}-{{sha}},enable={{is_default_branch}}
        labels: |
          org.opencontainers.image.title=Elodie
          org.opencontainers.image.description=Your Personal EXIF-based Photo, Video and Audio Assistant
          org.opencontainers.image.vendor=Jaisen Mathai
          org.opencontainers.image.licenses=ISC
          org.opencontainers.image.source=https://github.com/${{ github.repository }}

    - name: Build Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        load: true
        tags: test-image
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Test Docker image
      run: |
        docker run --rm test-image python --version
        docker run --rm test-image exiftool -ver
        docker run --rm test-image python elodie.py --help

    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: test-image
        format: 'sarif'
        output: 'trivy-results.sarif'

    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: 'trivy-results.sarif'

    - name: Build and push Docker image
      if: github.event_name != 'pull_request'
      uses: docker/build-push-action@v4
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max